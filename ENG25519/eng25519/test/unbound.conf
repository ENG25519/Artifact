server:
    # level 0 means no verbosity, only errors. Level 1 gives operational information. Level 2 gives detailed operational information including short information per query. Level 3 gives query level information, output per query. Level 4 gives algorithm level information. Level 5 logs client identification for cache misses
    verbosity: 0

    # The number of seconds between printing statistics to the log for every thread. Disable with value 0 or "". Default is disabled
    statistics-interval: 60

    # can be uncommented if you do not need user privilige protection
    username: ""

    # The number of threads to create to serve clients. Use 1 for no threading
    num-threads: 1

    # Number of outgoing TCP buffers to allocate per thread. Default is 10.
    # outgoing-num-tcp: 10

    # Number of incoming TCP buffers to allocate per thread. Default is 10.
    # incoming-num-tcp: 10

    # Number of bytes size maximum to use for waiting stream buffers. Default is 4 megabytes. A plain number is in bytes, append ‘k’, ‘m’ or ‘g’ for kilobytes, megabytes or gigabytes (1024*1024 bytes in a megabyte). As TCP and TLS streams queue up multiple results, the amount of memory used for these buffers does not exceed this number, otherwise the responses are dropped. This manages the total memory usage of the server (under heavy use), the number of requests that can be queued up per connection is also limited, with further requests waiting in TCP buffers.
    # stream-wait-size: 4m

    # Number of bytes size of the message buffers. Default is 65552 bytes, enough for 64 Kb packets, the maximum DNS message size. No message larger than this can be sent or received. Can be reduced to use less memory, but some requests for DNS data, such as for huge resource records, will result in a SERVFAIL reply to the client.
    # msg-buffer-size: 65552

    # Number of bytes size of the message cache. Default is 4 megabytes. A plain number is in bytes, append ‘k’, ‘m’ or ‘g’ for kilobytes, megabytes or gigabytes
    # msg-cache-size: 4m

    # The number of queries that every thread will service simultaneously. Default is 512 or 1024
    # num-queries-per-thread: 1024Z@

    # If yes, then open dedicated listening sockets for incoming queries for each thread and try to set the SO_REUSEPORT socket option on each socket.
    so-reuseport: yes

    # Number of bytes size of the RRset cache. Default is 4 megabytes.
    # rrset-cache-size: 4m

    # Time to live maximum for RRsets and messages in the cache. Default is 86400 seconds (1 day).
    # cache-max-ttl: 86400

    # Maximum segment size (MSS) of TCP socket on which the server responds to queries. Value lower than common MSS on Ethernet (1220 for example) will address path MTU problem. Note that not all platform supports socket option to set MSS (TCP_MAXSEG). Default is system default MSS determined by interface MTU and negotiation between server and client.
    # tcp-mss: 

    # The period Unbound will wait for a query on a TCP connection. If this timeout expires Unbound closes the connection. This option defaults to 30000 milliseconds. 
    # tcp-idle-timeout: 30000

    # The period Unbound will keep TCP persistent connections open to authority servers. This option defaults to 60000 milliseconds.
    # tcp-reuse-timeout: 60000

    # The maximum number of queries that can be sent on a persistent TCP connection. This option defaults to 200 queries.
    # max-reuse-tcp-queries: 200

    # Enable or disable whether the upstream queries use TCP only for transport. Default is no.
    # tcp-upstream: no

    # Enabled or disable whether the upstream queries use TLS only for transport. Default is no.
    # tls-upstream: no

    # The file must contain the private key for the TLS session, the public certificate is in the tls-service-pem file and it must also be specified if tls-service-key is specified. The ports enabled implicitly or explicitly via tls-port: and https-port
    tls-service-key: "/root/eng25519_main/test/ed25519.key"

    # The public key certificate pem file for the tls service.
    tls-service-pem: "/root/eng25519_main/test/ed25519.pem"

    # the log file, "" means log to stderr.
	# Use of this option sets use-syslog to "no".
	# logfile: "/root/unbound/unbound.log"

    # The port number on which to provide TCP TLS service, default 853, only interfaces configured with that port number as @number get the TLS service.
    tls-port: 853

    # These certificates are used for authenticating connections made to outside peers.
    # tls-cert-bundle:

    # If not "", lists files with 80 bytes of random contents that are used to perform TLS session resumption for clients using the unbound server
    # tls-session-ticket-keys:

    # Set the list of ciphers to allow when serving TLS. Use "" for defaults, and that is the **default**
    # run the command openssl ciphers -s -tls1_2 for getting all options
    # tls-ciphers: "ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256"

    # Set the list of ciphersuites to allow when serving TLS. This is for newer TLS 1.3 connections. Use "" for defaults, and that is the default.
    # run the command openssl ciphers -s -tls1_3 for getting all options
    tls-ciphersuites: "TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256"

    # access-control: <IP netblock> <action>

    # The process id is written to the file. Default is "/usr/local/etc/unbound/unbound.pid"
    # Default: from log I can see: "cannot open pidfile /run/unbound.pid Permission denied"
    # pidfile: "/home/zjp/myunbound/unbound.pid"

    # can be uncommented if you do not need file access protection
    # chroot: ""

    # location of the trust anchor file that enables DNSSEC. note that
    # the location of this file can elsewhere
    # auto-trust-anchor-file: "/usr/local/etc/unbound/root.key"
    # auto-trust-anchor-file: "/var/lib/unbound/root.key"

    # send minimal amount of information to upstream servers to enhance privacy
    qname-minimisation: yes

    # specify the interfaces to answer queries from by ip-address.
    # This interface is listened to for queries from clients, and answers to clients are given from it
    interface: 0.0.0.0
    interface: 0.0.0.0@853

    # The port number, default 53, on which the server responds to queries.
    port: 8053
    # interface: ::0

    # addresses from the IP range that are allowed to connect to the resolver
    # 0.0.0.0/0 allow means that we allow all Ips to connect to the resolver
    access-control: 0.0.0.0/0 allow
    # access-control: 2001:DB8/64 allow

    # Setting this to just “iterator” will result in a non-validating server. Setting this to “validator iterator” will turn on DNSSEC validation
    module-config: "iterator"

# name "." will forward all queries to that server
# forward-zone:
#     name: "."
#     forward-addr: 114.114.114.114
    local-data: "mycomputer.home A 10.0.1.8"